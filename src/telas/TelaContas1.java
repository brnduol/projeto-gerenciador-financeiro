/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

import classesGerenciador.ContasUsuarios;
import classesGerenciador.Usuario;
import java.text.ParseException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.util.Date;
import projeto.gerenciador.financeiro.ControleTelas;



/**
 *
 * @author Bruno Eduardo <https://github.com/brnduol>
 */
public class TelaContas1 extends javax.swing.JFrame {
    private ContasUsuarios contaUsuarios;
    private Usuario contaAtual;
    private ControleTelas controleTelas;

    /**
     * Creates new form TelaContas1
     */
    public TelaContas1() {
        contaUsuarios = ContasUsuarios.getInstance();
        contaAtual = contaUsuarios.conta();
        controleTelas = ControleTelas.getInstance();
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSeparator4 = new javax.swing.JSeparator();
        lblConta = new javax.swing.JLabel();
        lblSaldo = new javax.swing.JLabel();
        txtConta = new javax.swing.JTextField();
        txtSaldo = new javax.swing.JTextField();
        bntCriar = new javax.swing.JButton();
        bntExcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        bntEditar = new javax.swing.JButton();
        txtData = new javax.swing.JTextField();
        lblData = new javax.swing.JLabel();
        bntSalvar = new javax.swing.JButton();
        bntPesquisar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jmPrincipal = new javax.swing.JMenuItem();
        jmHistorico = new javax.swing.JMenuItem();
        jmGraficos = new javax.swing.JMenuItem();
        jmCategorias = new javax.swing.JMenuItem();
        jmSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblConta.setText("Conta");

        lblSaldo.setText("Saldo");

        txtConta.setToolTipText("Insira o tipo de Conta a ser cadastrada");

        txtSaldo.setToolTipText("Insira o saldo no formato inteiro");

        bntCriar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/hand_cursor-48_44849.png"))); // NOI18N
        bntCriar.setText("Criar");
        bntCriar.setToolTipText("Crie uma conta");
        bntCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntCriarActionPerformed(evt);
            }
        });

        bntExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/trash-48_45241.png"))); // NOI18N
        bntExcluir.setText("Excluir");
        bntExcluir.setToolTipText("Exclua uma conta");
        bntExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntExcluirActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Conta", "Saldo", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        bntEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/account_edit_outline_icon_140057 (1).png"))); // NOI18N
        bntEditar.setText("Editar");
        bntEditar.setToolTipText("Edite os dados da conta");
        bntEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntEditarActionPerformed(evt);
            }
        });

        txtData.setToolTipText("Insira a data no formato dd/mm/yyyy");

        lblData.setText("Data");

        bntSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/object_select_icon_180887.png"))); // NOI18N
        bntSalvar.setText("Salvar");
        bntSalvar.setToolTipText("Salve as alterações após editar os dados");
        bntSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSalvarActionPerformed(evt);
            }
        });

        bntPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/feature_search_outline_icon_139039 (1).png"))); // NOI18N
        bntPesquisar.setText("Pesquisar");
        bntPesquisar.setToolTipText("Pesquise pelo nome da conta");
        bntPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntPesquisarActionPerformed(evt);
            }
        });

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/1485477024-menu_78574.png"))); // NOI18N
        jMenu2.setText("Menu");
        jMenu2.setToolTipText("Navegue pelo menus para acessar as opções");

        jmPrincipal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/3643769-building-home-house-main-menu-start_113416 (1).png"))); // NOI18N
        jmPrincipal.setText("Tela principal");
        jmPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmPrincipalActionPerformed(evt);
            }
        });
        jMenu2.add(jmPrincipal);

        jmHistorico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/historical_3107.png"))); // NOI18N
        jmHistorico.setText("Historico");
        jmHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmHistoricoActionPerformed(evt);
            }
        });
        jMenu2.add(jmHistorico);

        jmGraficos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/graph_progress_chart_charts_analytics_bars_icon_124175.png"))); // NOI18N
        jmGraficos.setText("Graficos");
        jmGraficos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmGraficosActionPerformed(evt);
            }
        });
        jMenu2.add(jmGraficos);

        jmCategorias.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/category_icon_176162.png"))); // NOI18N
        jmCategorias.setText("Categorias");
        jmCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmCategoriasActionPerformed(evt);
            }
        });
        jMenu2.add(jmCategorias);

        jmSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/4115235-exit-logout-sign-out_114030.png"))); // NOI18N
        jmSair.setText("Sair");
        jmSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmSairActionPerformed(evt);
            }
        });
        jMenu2.add(jmSair);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblConta, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblData, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtConta, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(801, 801, 801)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE))
                    .addComponent(jSeparator5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bntCriar)
                        .addGap(51, 51, 51)
                        .addComponent(bntEditar)
                        .addGap(66, 66, 66)
                        .addComponent(bntExcluir)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(241, 241, 241)
                                .addComponent(jSeparator1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(bntSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bntPesquisar)
                                .addGap(61, 61, 61))))
                    .addComponent(jSeparator6))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblConta)
                    .addComponent(txtConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSaldo)
                    .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblData)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bntExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bntEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bntCriar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bntSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bntPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bntCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntCriarActionPerformed
        // Obtém o modelo da tabela
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // Obtém os dados dos campos de texto
        String conta = txtConta.getText();
        String saldoText = txtSaldo.getText();
        String dataText = txtData.getText();

        // Verifica se os campos não estão vazios
        if (!conta.isEmpty() && !saldoText.isEmpty() && !dataText.isEmpty()) {
            try {
                // Tenta converter o saldo para um número (Double)
                Double saldo = Double.parseDouble(saldoText);
                
                // Valida e converte a data
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                sdf.setLenient(false); // Rejeita datas inválidas como 31/02/2023
                Date data = sdf.parse(dataText); // Converte a String para Date

                
               
                // Insere a nova linha na primeira posição (índice 0)
                model.insertRow(0, new Object[]{conta, saldo, sdf.format(data)});

                // Limpa os campos de texto após a inserção
                txtConta.setText("");
                txtSaldo.setText("");
                txtData.setText("");
                
            } catch (NumberFormatException e) {
                // Se não for possível converter, exibe uma mensagem de erro
                JOptionPane.showMessageDialog(this, "Por favor, insira um valor numérico válido para o saldo.");
            } catch (ParseException e) {
                // Se a data não estiver no formato correto, exibe um erro
                JOptionPane.showMessageDialog(this, "Por favor, insira uma data válida no formato dd/mm/yyyy. Exemplo: 25/12/2025.");
            }
        } else {
            // Exibe uma mensagem se algum dos campos estiver vazio
            JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos.");
        }
    }//GEN-LAST:event_bntCriarActionPerformed

    private void bntExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntExcluirActionPerformed
        // Obtém o modelo da tabela
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // Verifica se há uma linha selecionada
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) {
            // Remove a linha selecionada
            model.removeRow(selectedRow);
        } else {
            // Caso nenhuma linha seja selecionada, exibe uma mensagem de erro
            JOptionPane.showMessageDialog(null, "Selecione uma linha para excluir.");
        }
    }//GEN-LAST:event_bntExcluirActionPerformed

    private void jmCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmCategoriasActionPerformed
        // Abrir a tela de categorias
        controleTelas.getTelaCategoria().setVisible(true);
        this.dispose(); // Fecha a tela atual
    }//GEN-LAST:event_jmCategoriasActionPerformed

    private void jmPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmPrincipalActionPerformed
        // Abrir a tela principal
        controleTelas.getTelaPrincipal().setVisible(true);
        this.dispose(); // Fecha a tela atual
    }//GEN-LAST:event_jmPrincipalActionPerformed

    private void jmHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmHistoricoActionPerformed
        // Abrir a tela de histórico
        controleTelas.getTelaHistorico().setVisible(true);
        this.dispose(); // Fecha a tela atual
    }//GEN-LAST:event_jmHistoricoActionPerformed

    private void jmGraficosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmGraficosActionPerformed
        // Abrir a tela de gráficos
        controleTelas.getTelaGrafico().setVisible(true);
        this.dispose(); // Fecha a tela atual
    }//GEN-LAST:event_jmGraficosActionPerformed

    private void jmSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmSairActionPerformed
        // Voltar para a tela principal ao clicar em "Sair"
        contaUsuarios.sairConta();
        controleTelas.getTelaLogin().setVisible(true);
        dispose();
    }//GEN-LAST:event_jmSairActionPerformed

    private void bntEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntEditarActionPerformed
        int selectedRow = jTable1.getSelectedRow();  // Obtém a linha selecionada na tabela.

        if (selectedRow != -1) {  // Verifica se há uma linha selecionada.
            txtConta.setText(jTable1.getValueAt(selectedRow, 0).toString());  // Preenche o campo de conta.
            txtSaldo.setText(jTable1.getValueAt(selectedRow, 1).toString());  // Preenche o campo de saldo.
            txtData.setText(jTable1.getValueAt(selectedRow, 2).toString());  // Preenche o campo de data.
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma linha para editar.");  // Exibe erro se nenhuma linha for selecionada.
        }
    }//GEN-LAST:event_bntEditarActionPerformed

    private void bntSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSalvarActionPerformed
        int linhaSelecionada = jTable1.getSelectedRow();  // Obtém a linha selecionada na tabela.

        if (linhaSelecionada != -1) {  // Verifica se uma linha foi selecionada.
            String conta = txtConta.getText();  // Obtém o valor de "Conta".
            String saldo = txtSaldo.getText();  // Obtém o valor de "Saldo".
            String data = txtData.getText();  // Obtém o valor de "Data".

            if (!conta.isEmpty() && !saldo.isEmpty() && !data.isEmpty()) {  // Verifica se os campos não estão vazios.
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();  // Obtém o modelo da tabela.

                // Atualiza os dados na tabela, especificando as colunas corretas.
                model.setValueAt(conta, linhaSelecionada, 0);  // Atualiza a coluna "Conta" (coluna 0).
                model.setValueAt(saldo, linhaSelecionada, 1);  // Atualiza a coluna "Saldo" (coluna 1).
                model.setValueAt(data, linhaSelecionada, 2);   // Atualiza a coluna "Data" (coluna 2).

                JOptionPane.showMessageDialog(this, "Dados atualizados com sucesso.");  // Informa que os dados foram salvos.
            } else {
                JOptionPane.showMessageDialog(this, "Por favor, insira todos os dados para salvar.");  // Verifica se os campos não estão vazios.
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma linha para editar para poder salvar.");  // Caso nenhuma linha tenha sido selecionada.
        }
    }//GEN-LAST:event_bntSalvarActionPerformed

    private void bntPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntPesquisarActionPerformed
     // Obtém o texto digitado no campo de pesquisa 'txtConta'
    String contaPesquisada = txtConta.getText(); // O texto é mantido como foi digitado

    // Verifica se o campo de pesquisa não está vazio
    if (contaPesquisada.isEmpty()) {
        // Exibe uma mensagem informando ao usuário para inserir uma conta para pesquisar
        javax.swing.JOptionPane.showMessageDialog(this, "Por favor, insira o nome da conta para pesquisar.", "Aviso", javax.swing.JOptionPane.WARNING_MESSAGE);
        return; // Interrompe a execução do método, impedindo a pesquisa
    }

    // Obtém o modelo da tabela
    javax.swing.table.DefaultTableModel modeloTabela = (javax.swing.table.DefaultTableModel) jTable1.getModel();

    // Variável para verificar se encontrou algum registro
    boolean encontrou = false;

    // Percorre todas as linhas da tabela
    for (int i = 0; i < modeloTabela.getRowCount(); i++) {
        // Obtém o nome da conta na tabela (ajustar o índice da coluna conforme necessário)
        String nomeContaTabela = modeloTabela.getValueAt(i, 0).toString().trim(); // Supondo que o nome da conta está na 1ª coluna (índice 0)

        // Verifica se o nome da conta na tabela corresponde à pesquisa
        if (nomeContaTabela.equalsIgnoreCase(contaPesquisada)) {
            // Seleciona a linha correspondente
            jTable1.setRowSelectionInterval(i, i);
            encontrou = true;
            break; // Encerra o loop assim que encontrar a correspondência
        }
    }

    // Se não encontrar nenhum registro, mostrar uma mensagem
    if (!encontrou) {
        javax.swing.JOptionPane.showMessageDialog(this, "Nenhuma conta encontrada com esse nome.");
    }
    }//GEN-LAST:event_bntPesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaContas1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaContas1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaContas1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaContas1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaContas1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntCriar;
    private javax.swing.JButton bntEditar;
    private javax.swing.JButton bntExcluir;
    private javax.swing.JButton bntPesquisar;
    private javax.swing.JButton bntSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenuItem jmCategorias;
    private javax.swing.JMenuItem jmGraficos;
    private javax.swing.JMenuItem jmHistorico;
    private javax.swing.JMenuItem jmPrincipal;
    private javax.swing.JMenuItem jmSair;
    private javax.swing.JLabel lblConta;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblSaldo;
    private javax.swing.JTextField txtConta;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtSaldo;
    // End of variables declaration//GEN-END:variables
}
